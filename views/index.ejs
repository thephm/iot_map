<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.13.1/jquery-ui.min.js"></script>
<style>
p, div {
    font-family:"Segoe UI",Tahoma,Verdana,Arial,Helvetica;
}
label {
    font-weight: normal !important;
}
.panel {
    border-color:grey;
    background-color:white;
}

.panel.on {
    border-color:green;
}

.panel.hover {
    border-color:blue;
}

/* set the map height explicitly to set size of div element that contains map
*/
#map {
    height: 100%;
}
/* Optional: Makes the sample page fill the window. */
html, body {
    height: 100%;
    margin: 0;
    padding: 0;
}
</style>
<script>
(g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})({
	key: "<%= process.env.GOOGLE_MAPS_API_KEY %>",
	v: "weekly"
});

window.onload = function() {
    let map;
	var geoCodeURL;
	var features;

    var categories;
    var defaultCategory;
    var defaultSubCategory;
	
    async function initMap() {
        const { Map } = await google.maps.importLibrary("maps");
        map = new Map(document.getElementById("mapDiv"), {
            center: new google.maps.LatLng(33.589886, 7.603869),
            zoom: 2,
		});
				
        const infoWindow = new google.maps.InfoWindow({
            content:"",
            maxWidth:200,
        });
		
        const marker = new google.maps.Marker();

	    map.data.addListener('click', function(event) {
	        id = event.feature.getId();
	        displayInfoWindow(event);
	        clickedPin(id);
	    });		
		
        function resetZoom() {
            map.setCenter(new google.maps.LatLng(33.589886, -7.603869));
            map.setZoom(2);
        }

	    function displayInfoWindow(event) {

	        lat = event.latLng.lat();
	        lng = event.latLng.lng();
	        map.data.overrideStyle(event.feature, { fillColor: 'pink' });

	        name = event.feature.getProperty('name');
	        id = event.feature.getId();
	        category = event.feature.getProperty('category');
	        subCategory = event.feature.getProperty('sub-category');
	        content = '<b>' + name + '</b>';

	        infoWindow.setContent(content);
            infoWindow.setPosition(event.latLng);
            infoWindow.open(map);
        }
	
        /**
        *
        * Load the geoJSON for organizations that produce one or more products in
        * the category and subcategory
        *
        * @param str category product category slug e.g. 'iot-platform'
        *
        * @param str subCategory product sub-category slug e.g. 'consumer'
        *
        * @return null
        *
        */
        function loadJSON(category, subCategory) {
            url = 'map/product/category/' + category + '/subcategory/' + subCategory;

            $.ajax({
                type: 'GET',
                url: url,
                dataType: 'json',
                cache: false,
                error: function() { console.log('could not load the map data'); },
                success: function(data) {
                    features = map.data.addGeoJson(data);
                    infoWindow.close();
                    removeFeatures();
                    resetZoom();
                    addFeatures(features);
                    logFeatures(features);
                }
            });
        }
		
        /**
        *
        * Loads the geoJSON for organizations that match a search term
        *
        * @param str term the search term
        *
        * @return null
        *
        */
        function loadJSONbyTerm(term) {
            url = 'map/organization?term=' + term;

            $.ajax({
                type: 'GET',
                url: url,
                dataType: 'json',
                cache: false,
                error: function() { console.log('could not load the map data'); },
                success: function(data) {
                    features = map.data.addGeoJson(data);
                    infoWindow.close();
                    removeFeatures();
                    resetZoom();
                    addFeatures(features);
                    logFeatures(features);
                    zoomToOrganization(term);
                }
            });
        }

        /**
        * Add the features to 'features' array
        *
        * @param array features array of Google Map Feature objects
        * @return null
        */
        function addFeatures(features) {
            features.forEach(function(feature) {
                map.features.push(feature);
            });
        } 

        /**
        * Write the properties of a Feature to the console
        *
        * @param array features array of Google Map Feature objects
        * @return null
        */
        function logFeatures(features) {
            features.forEach(function(feature) {
                logFeature(feature);
            });
        }

        /**
        * Write the properties of a Feature to the console
        *
        * @param array feature Google Map Feature object
        * @return null
        */
        function logFeature(feature) {
            id = feature.getId();
            name = feature.getProperty('name');
            url = feature.getProperty('url');
            geometry = feature.getGeometry();
            geo = geometry.get();
            console.log('id=' + id + ', name=' + name + ', url=' + url +
                        ' lat=' + geo.lat() + ', lng=' + geo.lng());
        } 

        /**
        * Remove all of the markers (Features) on the map
        *
        * @return null
        */
        function removeFeatures() {
            $.each(map.features, function (index, feature) {
                map.data.remove(feature);
            });
        }

        function changeCategories(newCategories) { categories = newCategories; }

        function getCategories() { return categories; }

        function getDefaultCategory() { return defaultCategory; }

        function setDefaultCategory(category) {
            return defaultCategory = category;
        }

        function getDefaultSubCategory(category_slug) {
            subCategory = '';
            $.each(categories, function(index, category) {
                if (category.slug == category_slug) {
                subCategory = category.default_sub_category;
                }
            });
            return subCategory;
        }
		
        /**
         * Grab all of the categories an sub-categories from the server
         *
         * @return null
         */
        function loadCategories() {

            url = 'product/categories/';

            $.ajax({
                type: 'GET',
                url: url,
                dataType: 'json',
                cache: false,
                error: function() { console.log('could not load the categories'); },
                success: function(data) {

                    changeCategories(data);
                    categories = getCategories();
                    categorySlug = getDefaultCategory();
                    $('#primary_category').html(
                        getCategoriesHTML(categories, "primary_category_slug")
                    );

                    subCategorySlug = getDefaultSubCategory(categorySlug);
                    $('#secondary_category').html(
                        getCategoriesHTML(categories[ 0 ]['subcategories'],
                        "secondary_category_slug")
                    );

                    // click the radio buttons for the default category and sub-category
                    //$('#primary_category').find('[ value="' + categorySlug + '" ]').iCheck('check');
                
				    query = '[ value="' + categorySlug + '" ]';
                    $('#primary_category').find(query).each(function() {
                        return new Promise((resolve, reject) => {
                            try {
                                $this.iCheck('check');
                                resolve();
                            } catch (err) {
                                reject(err);
                            }
                        });
                    });
				  
                    // $('#secondary_category').find('[ value="' + subCategorySlug + '" ]').iCheck('check');
					query = '[ value="' + subCategorySlug + '" ]';
                    $('#secondary_category').find(query).each(function() {
                        return new Promise((resolve, reject) => {
                            try {
                                $this.iCheck('check');
                                resolve();
                            } catch (err) {
                                reject(err);
                            }
                        });
                    });                   

                  styleButtons();
                  setupCategoryClick();
                  setupSubCategoryClick();

                  loadOrganizations(categorySlug, subCategorySlug);
                }
            }); 
        }
		
        function clickedPin(id) {
            var feature = map.data.getFeatureById(id);
            var name = feature.getProperty('name');

            loadOrganization(id);
            map.data.overrideStyle(feature, {icon: "http://maps.google.com/mapfiles/ms/icons/green-dot.png"});
        }

        // style the radio buttons using iCheck
        function styleButtons() {
            $('input').iCheck({
                checkboxClass: 'icheckbox_square-purple',
                radioClass: 'iradio_square-purple',
                increaseArea: '20%' // optional
            });
        }

        // search
        function search(search) {
            term = search.value;
            searchOrganizations(term);
            loadJSONbyTerm(term);
        }

        // setup the action when user clicks a category, so the sub-categories
        // are changed
        function setupCategoryClick() {
            $('[name="primary_category_slug"]').on('ifChecked', function(event) {
                categoryClicked(event);
            });
        }

        // setup the action when user clicks a subCategory, so the orgs are loaded
        function setupSubCategoryClick() {
            $('[name="secondary_category_slug"]').on('ifChecked', function(event) {
                subCategoryClicked(event);
            });
        }

        /**
         *
         * Change the sub-category pane to list all of the sub-categories if a category
         * is selected
         *
         * @param event the jQuery event object
         * 
         * @return null
         *
         */
        function categoryClicked(event) {

            if (event) {
                categorySlug = event.target.value;
                categories = getCategories();

                $(categories).each(function (index) {
                    if (categories[ index ][ "slug" ] == categorySlug) {

                        // get the HTML for the sub-catetories panel
                        $('#secondary_category').html(
                            getCategoriesHTML(categories[ index ]['subcategories'],
                            "secondary_category_slug")
                        );
                        styleButtons();
                        setupCategoryClick();
                        setupSubCategoryClick();
                        subCategory = getDefaultSubCategory(categorySlug);
                        if (subCategory) {
                            $('#secondary_category').
                            find('[value="' + subCategory + '"]').iCheck('check');
                        }

                        // update the list of organizations
                        loadOrganizations(categorySlug, subCategory);
                    }
                });
            }
        } 

        function subCategoryClicked(event) {
            element = event.target;
            subCategorySlug = element.value;

            // get the currently selected categorySlug
            categorySlug = $('[name="primary_category_slug"]:checked').val();

            loadOrganizations(categorySlug, subCategorySlug);
            $('#organizations').html('<i>loading...</i>');

            loadJSON(categorySlug, subCategorySlug);
        }

        // zoom the map to the organization
        function zoomToOrganization(slug) {
            $('.panel').removeClass('on');
            $('#' + slug + '-panel').toggleClass('on');

            latitude = Number($('#' + slug + '-lat').val());
            longitude = Number($('#' + slug + '-lng').val());
            if (latitude && longitude) {
                var position = { lat: latitude, lng: longitude };
                map.setCenter(position);
                map.setZoom(10);
            }
        }
        /**
         *
         * Load all organizations that deliver products in a given category or
         * subcategory.
         *
         * @param str categorySlug short RESTful tag for the category e.g. 'hardware'
         *
         * @param str subCategorySlug short RESTful tag for the sub-category e.g. 'cpu'
         *
         * @return null
         */
        function loadOrganizations(categorySlug, subCategorySlug) {

            url = '/organization/product/category/' + categorySlug;
            if (subCategorySlug) { url += '/subcategory/' + subCategorySlug; }
            $.ajax({
                type: 'GET',
                url: url,
                cache: false,
                error: function() { console.log('could not load the organizations'); },
                success: function(data) {
                    $('#organizations').html(data);
                }
            });
        }

        /**
         * Load all products that match the search criteria
         *
         * @param str term search term
         * @return null
         */
        function searchOrganizations(term) {
            url = '/organization?term=' + term;
            $.ajax({
                type: 'GET',
                url: url,
                cache: false,
                error: function() { console.log('could not load the organizations'); },
                success: function(data) {
                    $('#organizations').html(data);
                }
            });
        }

        /**
         * Load a specific organization
         *
         * @param str slug short RESTful tag for the organization
         * @return null
         */
        function loadOrganization(slug) {
            url = '/organization/' + slug;
            $.ajax({
                type: 'GET',
                url: url,
                cache: false,
                error: function() { console.log('could not load the organization'); },
                success: function(data) {
                    $('#organizations').html(data);
                }
            });
        }

        /**
         * Load a specific product
         *
         * @param str slug short RESTful tag for the product
         * @return null
         */
        function loadProduct(slug) {
            url = '/product/' + slug;
            $.ajax({
                type: 'GET',
                url: url,
                cache: false,
                error: function() { console.log('could not load the organization'); },
                success: function(data) {
                    $('#organizations').html(data);
                }
            });
        }

        /**
         * Load a specific integration
         *
         * @param str slug short RESTful tag for the integration
         * @return null
         */
        function loadIntegration(slug) {
            url = '/product/' + slug;
            $.ajax({
                type: 'GET',
                url: url,
                cache: false,
                error: function() { console.log('could not load the organization'); },
                success: function(data) {
                    $('#organizations').html(data);
                }
            });
        }

        /**
         * Generates a radio button for each category
         *
         * @param array categories list of categories
         * @param str field field 'id' for the <input> div
         */
        function getCategoriesHTML(theCategories, field) {

            html = '';

            for (i=0; i < theCategories.length; i++) {
                slug = theCategories[i]['slug'];
                name = theCategories[i]['name'];
                html += '<div class="iradio">';
                html += '<input type="radio" name="' + field + '" id="' + field + '[' + i + ']" ';
                html += 'value="' + theCategories[i]['slug'] + '">';
                html += ' <label for="' + field + '[' + i + ']">' + name + '</label>';
                html += '</div>';
            }

            return html;
        }
		
        loadCategories();
        defaultCategory = 'iot-platform';
	    loadJSON('iot-platform', 'software');
    }

    initMap();    // create the Map object
}
</script>

<%- include('header'); -%>
	<%- include('navbar'); -%>

<div class="container-fluid grid">

<div class="row">
        
  <div class="col-sm-2" id="category-panel">
    <input name="search" type="text" class="form-control" placeholder="search term" required autofocus onChange="search(this);">
    <b>Category</b>
    <div class="panel panel-default" id="primary_category">
    </div> <!-- panel -->

    <b>Sub-Category</b>
    <div class="panel panel-default" id="secondary_category">
    </div> <!-- panel -->
  </div>

  <!--
  <div class="col-sm-7" id="mapDiv"></div>
  -->
  <div id="mapDiv" style="width: 50%; height: 400px;"></div>
	
  <div class="col-sm-3" id="organizations" class="pre-scrollable">
  </div>

</div> <!-- row -->

</div> <!-- container -->

<%- include('footer'); %>